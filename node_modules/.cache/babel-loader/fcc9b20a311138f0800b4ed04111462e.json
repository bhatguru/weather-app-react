{"ast":null,"code":"var _jsxFileName = \"/home/gb/weather-app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weatherapp\"; // api.openweathermap.org/data/2.5/weather?q=London,uk\n\nconst API_KEY = \"db0722dc5ad7c43d8271bb13f965e3fb\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeatherData = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Bangalore,in&appid=${API_KEY}`);\n      const response = await api_call.json();\n      this.setState({\n        city: response.name,\n        country: response.sys.country\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeatherData();\n  }\n\n  render() {\n    const {\n      city,\n      country,\n      icon,\n      main,\n      celsius,\n      temp_max,\n      temp_min,\n      description,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      city: city,\n      country: country,\n      icon: icon,\n      main: main,\n      celsius: celsius,\n      temp_max: temp_max,\n      temp_min: temp_min,\n      description: description,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gb/weather-app/src/App.js"],"names":["React","Weather","API_KEY","App","Component","constructor","props","getWeatherData","api_call","fetch","response","json","setState","city","name","country","sys","state","undefined","icon","main","celsius","temp_max","temp_min","description","error","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,cAhBmB,GAgBF,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uEAAsEP,OAAQ,EADrD,CAA5B;AAGA,YAAMQ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEH,QAAQ,CAACI,IADH;AAEZC,QAAAA,OAAO,EAAEL,QAAQ,CAACM,GAAT,CAAaD;AAFV,OAAd;AAID,KAzBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXJ,MAAAA,IAAI,EAAEK,SADK;AAEXH,MAAAA,OAAO,EAAEG,SAFE;AAGXC,MAAAA,IAAI,EAAED,SAHK;AAIXE,MAAAA,IAAI,EAAEF,SAJK;AAKXG,MAAAA,OAAO,EAAEH,SALE;AAMXI,MAAAA,QAAQ,EAAEJ,SANC;AAOXK,MAAAA,QAAQ,EAAEL,SAPC;AAQXM,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,KAAK,EAAE;AATI,KAAb;AAWA,SAAKlB,cAAL;AACD;;AAYDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AACJb,MAAAA,IADI;AAEJE,MAAAA,OAFI;AAGJI,MAAAA,IAHI;AAIJC,MAAAA,IAJI;AAKJC,MAAAA,OALI;AAMJC,MAAAA,QANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUF,KAAKR,KAVT;AAWA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEJ,IAAf;AAAqB,MAAA,OAAO,EAAEE,OAA9B;AAAuC,MAAA,IAAI,EAAEI,IAA7C;AAAmD,MAAA,IAAI,EAAGC,IAA1D;AAAgE,MAAA,OAAO,EAAEC,OAAzE;AAAkF,MAAA,QAAQ,EAAEC,QAA5F;AAAsG,MAAA,QAAQ,EAAEC,QAAhH;AAA0H,MAAA,WAAW,EAAEC,WAAvI;AAAoJ,MAAA,KAAK,EAAEC,KAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA5C+B;;AA+ClC,eAAetB,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weatherapp\";\n\n// api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_KEY = \"db0722dc5ad7c43d8271bb13f965e3fb\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n    this.getWeatherData();\n  }\n\n  getWeatherData = async () => {\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=Bangalore,in&appid=${API_KEY}`\n    );\n    const response = await api_call.json();\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n    });\n  };\n  render() {\n    const {\n      city,\n      country,\n      icon,\n      main,\n      celsius,\n      temp_max,\n      temp_min,\n      description,\n      error,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Weather city={city} country={country} icon={icon} main ={main} celsius={celsius} temp_max={temp_max} temp_min={temp_min} description={description} error={error}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}