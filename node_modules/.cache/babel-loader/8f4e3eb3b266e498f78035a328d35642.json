{"ast":null,"code":"var _jsxFileName = \"/home/gb/weather-app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weatherapp\"; // api.openweathermap.org/data/2.5/weather?q=London,uk\n\nconst API_KEY = \"db0722dc5ad7c43d8271bb13f965e3fb\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeatherData = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Bangalore,in&appid=${API_KEY}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        icon: this.weathericon.Thunderstorm,\n        main: response.weather.main\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeatherData();\n    this.weathericon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-select\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      clouds: \"wi-day-fog\"\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({\n          icon: this.weathericon.Thunderstorm\n        });\n        break;\n    }\n  }\n\n  render() {\n    const {\n      city,\n      country,\n      icon,\n      main,\n      celsius,\n      temp_max,\n      temp_min,\n      description,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      city: city,\n      country: country,\n      weathericon: icon,\n      main: main,\n      celsius: celsius,\n      temp_max: temp_max,\n      temp_min: temp_min,\n      description: description,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gb/weather-app/src/App.js"],"names":["React","Weather","API_KEY","App","Component","constructor","props","getWeatherData","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","calCelsius","main","temp","temp_max","temp_min","description","weather","icon","weathericon","Thunderstorm","state","undefined","error","Drizzle","Rain","Snow","Atmosphere","Clear","clouds","cell","Math","floor","get_WeatherIcon","icons","rangeId","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weatherapp\";\n\n// api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_KEY = \"db0722dc5ad7c43d8271bb13f965e3fb\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n    this.getWeatherData();\n    this.weathericon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-select\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      clouds: \"wi-day-fog\",\n    };\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  get_WeatherIcon(icons,rangeId){\n    switch(true){\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n      case rangeId >= 200 && rangeId <= 232:\n        this.setState({icon : this.weathericon.Thunderstorm })\n        break;\n\n    }\n  }\n  getWeatherData = async () => {\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=Bangalore,in&appid=${API_KEY}`\n    );\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius: this.calCelsius(response.main.temp),\n      temp_max: this.calCelsius(response.main.temp_max),\n      temp_min: this.calCelsius(response.main.temp_min),\n      description: response.weather[0].description,\n      icon: this.weathericon.Thunderstorm,\n      main: response.weather.main,\n    });\n  };\n  render() {\n    const {\n      city,\n      country,\n      icon,\n      main,\n      celsius,\n      temp_max,\n      temp_min,\n      description,\n      error,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Weather\n          city={city}\n          country={country}\n          weathericon={icon}\n          main={main}\n          celsius={celsius}\n          temp_max={temp_max}\n          temp_min={temp_min}\n          description={description}\n          error={error}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}