{"ast":null,"code":"var _jsxFileName = \"/home/gb/weather-app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weatherapp\"; // api.openweathermap.org/data/2.5/weather?q=London,uk\n\nconst API_KEY = \"db0722dc5ad7c43d8271bb13f965e3fb\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getWeatherData = async () => {\n      const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=Bangalore,in&appid=${API_KEY}`);\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celsius: response.main.temp,\n        icon: \"\",\n        main: response.weather.main\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeatherData();\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    const {\n      city,\n      country,\n      icon,\n      main,\n      celsius,\n      temp_max,\n      temp_min,\n      description,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      city: city,\n      country: country,\n      icon: icon,\n      main: main,\n      celsius: celsius,\n      temp_max: temp_max,\n      temp_min: temp_min,\n      description: description,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/gb/weather-app/src/App.js"],"names":["React","Weather","API_KEY","App","Component","constructor","props","getWeatherData","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celsius","main","temp","icon","weather","state","undefined","temp_max","temp_min","description","error","calCelsius","cell","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,sCAAP;AACA,OAAO,qCAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,cApBmB,GAoBF,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uEAAsEP,OAAQ,EADrD,CAA5B;AAGA,YAAMQ,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,OAAO,EAAGT,QAAQ,CAACU,IAAT,CAAcC,IAHZ;AAIZC,QAAAA,IAAI,EAAC,EAJO;AAKZF,QAAAA,IAAI,EAAGV,QAAQ,CAACa,OAAT,CAAiBH;AALZ,OAAd;AAQD,KAlCkB;;AAEjB,SAAKI,KAAL,GAAa;AACXT,MAAAA,IAAI,EAAEU,SADK;AAEXR,MAAAA,OAAO,EAAEQ,SAFE;AAGXH,MAAAA,IAAI,EAAEG,SAHK;AAIXL,MAAAA,IAAI,EAAEK,SAJK;AAKXN,MAAAA,OAAO,EAAEM,SALE;AAMXC,MAAAA,QAAQ,EAAED,SANC;AAOXE,MAAAA,QAAQ,EAAEF,SAPC;AAQXG,MAAAA,WAAW,EAAE,EARF;AASXC,MAAAA,KAAK,EAAE;AATI,KAAb;AAWA,SAAKtB,cAAL;AACD;;AAEDuB,EAAAA,UAAU,CAACT,IAAD,EAAM;AACd,QAAIU,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWZ,IAAI,GAAG,MAAlB,CAAX;AACA,WAAOU,IAAP;AACD;;AAgBDG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJnB,MAAAA,IADI;AAEJE,MAAAA,OAFI;AAGJK,MAAAA,IAHI;AAIJF,MAAAA,IAJI;AAKJD,MAAAA,OALI;AAMJO,MAAAA,QANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUF,KAAKL,KAVT;AAWA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAET,IAAf;AAAqB,MAAA,OAAO,EAAEE,OAA9B;AAAuC,MAAA,IAAI,EAAEK,IAA7C;AAAmD,MAAA,IAAI,EAAGF,IAA1D;AAAgE,MAAA,OAAO,EAAED,OAAzE;AAAkF,MAAA,QAAQ,EAAEO,QAA5F;AAAsG,MAAA,QAAQ,EAAEC,QAAhH;AAA0H,MAAA,WAAW,EAAEC,WAAvI;AAAoJ,MAAA,KAAK,EAAEC,KAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AArD+B;;AAwDlC,eAAe1B,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weatherapp\";\n\n// api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_KEY = \"db0722dc5ad7c43d8271bb13f965e3fb\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false,\n    };\n    this.getWeatherData();\n  }\n\n  calCelsius(temp){\n    let cell = Math.floor(temp - 273.15)\n    return cell;\n  }\n  getWeatherData = async () => {\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=Bangalore,in&appid=${API_KEY}`\n    );\n    const response = await api_call.json();\n    console.log(response);\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celsius : response.main.temp,\n      icon:\"\",\n      main : response.weather.main\n      \n    });\n  };\n  render() {\n    const {\n      city,\n      country,\n      icon,\n      main,\n      celsius,\n      temp_max,\n      temp_min,\n      description,\n      error,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <Weather city={city} country={country} icon={icon} main ={main} celsius={celsius} temp_max={temp_max} temp_min={temp_min} description={description} error={error}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}